name: qa

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  formatting-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Clang-format style check
      uses: jidicula/clang-format-action@v4.3.0
      with:
        clang-format-version: '14'
        check-path: .
        exclude-regex: './contrib/'

  analyze:
    name: CodeQL
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write

    defaults:
      run:
        shell: bash -el {0}

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
      - name: Set up miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: false
          channels: andrsd,conda-forge,defaults
          channel-priority: strict
          miniforge-version: latest
          miniforge-variant: Mambaforge
          use-mamba: true

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          mamba install \
            cmake \
            make \
            cxx-compiler \
            mpich \
            fmt==9.1.0 \
            petsc==3.19.4 \
            yaml-cpp==0.7.0 \
            exodusIIcpp==1.6

      - name: Configure
        run: |
          cmake -S ${{ github.workspace }} -B ${{ github.workspace }}/build \
            -DGODZILLA_WITH_PERF_LOG=YES \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Build
        run: make -C ${{ github.workspace }}/build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  codacy-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
