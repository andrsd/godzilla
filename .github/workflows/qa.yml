name: qa

env:
  PETSC_VERSION: 3.17.0
  PETSC_CACHE_NUM: 10
  EXODUSIICPP_VERSION: 1.6

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  formatting-check:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Clang-format style check
      uses: jidicula/clang-format-action@v4.3.0
      with:
        clang-format-version: '14'
        check-path: .
        exclude-regex: './contrib/'

  analyze:
    name: CodeQL
    runs-on: ubuntu-22.04
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: main

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install \
            cmake \
            libblas-dev \
            liblapack-dev \
            libfmt-dev \
            libyaml-cpp-dev \
            zlib1g-dev

      - name: Setup env
        run: |
          echo "${{ github.workspace }}/petsc/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
          echo "NETCDF_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
          echo "EXODUSII_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
          echo "CC=mpicc" >> $GITHUB_ENV
          echo "CXX=mpicxx" >> $GITHUB_ENV

      - name: Cache PETSc
        id: cache-petsc
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/petsc
          key: ${{ runner.os }}-gcc-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-gcc-petsc-cache-${{ env.PETSC_CACHE_NUM }}

      - name: Build exodusIIcpp
        run: |
          cd ${{ github.workspace }}
          echo "::group::download"
          wget -q https://github.com/andrsd/exodusIIcpp/archive/refs/tags/v${EXODUSIICPP_VERSION}.tar.gz -O exodusIIcpp-${EXODUSIICPP_VERSION}.tar.gz
          tar -xzf exodusIIcpp-${EXODUSIICPP_VERSION}.tar.gz
          echo "::endgroup::"
          echo "::group::configure"
          cmake \
            -S ${{ github.workspace }}/exodusIIcpp-${EXODUSIICPP_VERSION} \
            -B ${{ github.workspace }}/exodusIIcpp-${EXODUSIICPP_VERSION}/build \
            -DCMAKE_BUILD_TYPE=Release \
            -DEXODUSIICPP_LIBRARY_TYPE=SHARED
          echo "::endgroup::"
          echo "::group::make"
          cd ${{ github.workspace }}/exodusIIcpp-${EXODUSIICPP_VERSION}/build
          make all -C ${{ github.workspace }}/exodusIIcpp-${EXODUSIICPP_VERSION}/build
          sudo make install -C ${{ github.workspace }}/exodusIIcpp-${EXODUSIICPP_VERSION}/build
          echo "::endgroup::"

      - name: Configure
        run: |
          cmake -S ${{ github.workspace }}/main -B ${{ github.workspace }}/main/build \
            -DGODZILLA_WITH_PERF_LOG=YES \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Build
        run: make -C ${{ github.workspace }}/main/build

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  codacy-security-scan:
    permissions:
      contents: read
      security-events: write
      actions: read
    name: Codacy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          gh-code-scanning-compat: true
          max-allowed-issues: 2147483647

      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
