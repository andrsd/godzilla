name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux-clang:
    runs-on: ubuntu-20.04
    name: ubuntu-clang
    env:
      PETSC_VERSION: 3.17.0
      PETSC_CACHE_NUM: 8
      CC: mpicc
      CXX: mpicxx
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install llvm-12 libblas-dev liblapack-dev
      - name: Setup env
        run: |
          echo "${{ github.workspace }}/petsc/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
      - name: Load PETSc
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/petsc
          key: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES
      - name: Build
        run: make -C ${{ github.workspace }}/build
      - name: Run tests
        run: make -C ${{ github.workspace }}/build test ARGS='-V'

  linux-gcc:
    runs-on: ubuntu-20.04
    name: ubuntu-gcc
    env:
      PETSC_VERSION: 3.17.0
      PETSC_CACHE_NUM: 8
      CC: mpicc
      CXX: mpicxx
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install libblas-dev liblapack-dev
      - name: Setup env
        run: |
          echo "${{ github.workspace }}/petsc/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
      - name: Load PETSc
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/petsc
          key: ${{ runner.os }}-gcc-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-gcc-petsc-cache-${{ env.PETSC_CACHE_NUM }}
      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES
      - name: Build
        run: make -C ${{ github.workspace }}/build
      - name: Run tests
        run: make -C ${{ github.workspace }}/build test ARGS='-V'

  macosx-clang:
    runs-on: macos-10.15
    name: macosx-clang
    env:
      PETSC_VERSION: 3.17.0
      PETSC_CACHE_NUM: 8
      SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk
      CC: mpicc
      CXX: mpicxx
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install cmake automake
      - name: Setup env
        run: |
          echo "${{ github.workspace }}/petsc/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
      - name: Load PETSc
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/petsc
          key: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES
      - name: Build
        run: make -C ${{ github.workspace }}/build
      - name: Run tests
        run: make -C ${{ github.workspace }}/build test ARGS='-V'
