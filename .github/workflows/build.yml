name: build

env:
  PETSC_VERSION: 3.17.0
  PETSC_CACHE_NUM: 10

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            compiler: gcc
          - os: macos-11
            compiler: clang
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          path: main

      - name: Install dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update -qq
          sudo apt install \
            cmake \
            libblas-dev \
            liblapack-dev \
            libfmt-dev \
            libyaml-cpp-dev \
            zlib1g-dev

      - name: Install dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install \
            cmake \
            automake \
            fmt \
            yaml-cpp \
            zlib

      - name: Set up env (clang)
        if: matrix.compiler == 'clang'
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "FC=gfortran-10" >> $GITHUB_ENV

      - name: Set up env (gcc)
        if: matrix.compiler == 'gcc'
        run: |
          echo "CC=gcc" >> $GITHUB_ENV
          echo "CXX=g++" >> $GITHUB_ENV
          echo "FC=gfortran-10" >> $GITHUB_ENV

      - name: Cache PETSc
        id: cache-petsc
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/petsc
          key: ${{ runner.os }}-${{ matrix.compiler }}-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-${{ matrix.compiler }}-petsc-cache-${{ env.PETSC_CACHE_NUM }}

      - name: Build PETSc
        if: steps.cache-petsc.outputs.cache-hit != 'true'
        run: |
          cd ${{ github.workspace }}
          echo "::group::download"
          wget -q https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-${PETSC_VERSION}.tar.gz
          tar -xzf petsc-${PETSC_VERSION}.tar.gz
          echo "::endgroup::"
          cd petsc-${PETSC_VERSION}
          echo "::group::configure"
          ./configure \
            --prefix=${{ github.workspace }}/petsc \
            --shared-libraries \
            --with-debugging=no \
            --with-cxx-dialect=cxx14 \
            --with-pic=yes \
            --with-ssl=no \
            --with-zlib=yes \
            --with-x=no \
            --download-mpich \
            --download-exodusii \
            --download-netcdf \
            --download-pnetcdf \
            --download-hdf5 \
            --CC=$CC \
            --CXX=$CXX \
            --FC=$FC \
            PETSC_DIR=`pwd`
          echo "::endgroup::"
          echo "::group::make"
          make PETSC_DIR=`pwd` all
          make PETSC_DIR=`pwd` install
          echo "::endgroup::"

      - name: Set up env
        run: |
          echo "${{ github.workspace }}/petsc/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
          echo "CC=mpicc" >> $GITHUB_ENV
          echo "CXX=mpicxx" >> $GITHUB_ENV

      - name: Configure
        run: |
          cmake -S ${{ github.workspace }}/main -B ${{ github.workspace }}/main/build \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES \
            -DGODZILLA_CODE_COVERAGE=YES

      - name: Build
        run: make -C ${{ github.workspace }}/main/build

      - name: Run tests
        run: make -C ${{ github.workspace }}/main/build test ARGS='-V'
