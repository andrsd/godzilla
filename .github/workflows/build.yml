name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  linux:
    runs-on: ubuntu-latest
    name: ubuntu
    env:
      PETSC_VERSION: 3.17.0
      PETSC_CACHE_NUM: 4
      PETSC_ARCH: arch-linux-c-opt
      CC: mpicc
      CXX: mpicxx
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt install cmake llvm-12 gfortran-10
      - name: Setup env
        run: |
          echo "${{ github.workspace }}/petsc-${{ env.PETSC_VERSION }}/${{ env.PETSC_ARCH }}/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc-${{ env.PETSC_VERSION }}" >> $GITHUB_ENV
      - name: Load PETSc
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/petsc-${{ env.PETSC_VERSION }}
          key: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES \
            -DGODZILLA_CODE_COVERAGE=YES
      - name: Build
        run: make -C ${{ github.workspace }}/build
      - name: Run tests
        run: make -C ${{ github.workspace }}/build test ARGS='-V'

  macosx:
    runs-on: macos-10.15
    name: macos
    env:
      PETSC_VERSION: 3.17.0
      PETSC_CACHE_NUM: 4
      SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX10.15.sdk
      PETSC_ARCH: arch-darwin-c-opt
      CC: mpicc
      CXX: mpicxx
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Install dependencies
        run: brew install cmake autoconf automake libtool
      - name: Setup env
        run: |
          echo "${{ github.workspace }}/petsc-${{ env.PETSC_VERSION }}/${{ env.PETSC_ARCH }}/bin" >> $GITHUB_PATH
          echo "PETSC_DIR=${{ github.workspace }}/petsc-${{ env.PETSC_VERSION }}" >> $GITHUB_ENV
      - name: Load PETSc
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/petsc-${{ env.PETSC_VERSION }}
          key: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
          restore-keys: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
      - name: Configure
        run: |
          cmake -S . -B ${{ github.workspace }}/build \
            -DGODZILLA_BUILD_EXAMPLES=YES \
            -DGODZILLA_BUILD_TESTS=YES \
            -DGODZILLA_CODE_COVERAGE=YES
      - name: Build
        run: make -C ${{ github.workspace }}/build
      - name: Run tests
        run: make -C ${{ github.workspace }}/build test ARGS='-V'
      - name: Generate code coverage
        run: make -C ${{ github.workspace }}/build coverage
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: coverage-${{ github.job }}
          path: ${{ github.workspace }}/build/coverage.info

  upload-to-codecov:
    needs: [macosx, linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage-macosx/coverage.info
