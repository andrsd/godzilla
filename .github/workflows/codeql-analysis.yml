# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '23 14 * * 5'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-22.04
    env:
      PETSC_VERSION: 3.17.0
      PETSC_CACHE_NUM: 9
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.

        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality


    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #   uses: github/codeql-action/autobuild@v2

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines.
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Install dependencies
      run: |
        sudo apt-get update -qq
        sudo apt install llvm-12 libblas-dev liblapack-dev libyaml-cpp-dev libfmt-dev
    - name: Setup env
      run: |
        echo "${{ github.workspace }}/petsc/bin" >> $GITHUB_PATH
        echo "PETSC_DIR=${{ github.workspace }}/petsc" >> $GITHUB_ENV
        echo "CC=mpicc" >> $GITHUB_ENV
        echo "CXX=mpicxx" >> $GITHUB_ENV
    - name: Load PETSc
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/petsc
        key: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
        restore-keys: ${{ runner.os }}-clang-petsc-cache-${{ env.PETSC_CACHE_NUM }}
    - name: Configure
      run: |
        cmake -S . -B ${{ github.workspace }}/build \
          -DGODZILLA_BUILD_EXAMPLES=YES \
          -DGODZILLA_BUILD_TESTS=YES
    - name: Build
      run: make -C ${{ github.workspace }}/build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
