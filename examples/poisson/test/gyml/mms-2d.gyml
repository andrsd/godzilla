mesh:
  type: RectangleMesh
  nx: 2
  ny: 2
  xmin: 0
  xmax: 2
  ymin: 0
  ymax: 2

auxs:
  forcing_fn:
    type: FunctionAuxiliaryField
    value: '-4'

problem:
  type: PoissonEquation

ics:
  all:
    type: ConstantIC
    value: [ 0 ]

bcs:
  left:
    type: DirichletBC
    boundary: 'left'
    value: [ 'x*x + y*y' ]

  right:
    type: DirichletBC
    boundary: 'right'
    value: [ 'x*x + y*y' ]

  top:
    type: DirichletBC
    boundary: 'top'
    value: [ 'x*x + y*y' ]

  bottom:
    type: DirichletBC
    boundary: 'bottom'
    value: [ 'x*x + y*y' ]

output:
  out:
    type: ExodusIIOutput
    variables: 'u'
