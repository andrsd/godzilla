if (DEFINED ENV{CONDA_PREFIX})
    set(CMAKE_BUILD_RPATH $ENV{CONDA_PREFIX}/lib)
endif()

add_executable(${PROJECT_NAME}
    Array_test.cpp
    AssemblyList_test.cpp
    BoundaryCondition_test.cpp
    CallStack_test.cpp
    DenseMatrix_test.cpp
    Determinant_test.cpp
    Edge_test.cpp
    Error_test.cpp
    ExodusIIMesh_test.cpp
    Factory_test.cpp
    GodzillaApp_test.cpp
    GYMLFile_test.cpp
    H1LobattoShapesetEdge_test.cpp
    H1Space_test.cpp
    Hex_test.cpp
    InputParameters_test.cpp
    LineMesh_test.cpp
    Logger_test.cpp
    Object_test.cpp
    ParsedFunctionEvaluator_test.cpp
    PetscVector_test.cpp
    PetscMatrix_test.cpp
    PrintInterface_test.cpp
    Problem_test.cpp
    Quad_test.cpp
    QuadratureGauss1D_test.cpp
    QuadratureGauss2DTri_test.cpp
    QuadratureGauss3DTetra_test.cpp
    RealVector_test.cpp
    RefDomain_test.cpp
    RefMap1D_test.cpp
    RefMapShapesetEdge_test.cpp
    ShapeFunction1D_test.cpp
    Tetra_test.cpp
    Tri_test.cpp
    Utils_test.cpp
    Vertex_test.cpp
    main.cpp
)
target_code_coverage(${PROJECT_NAME})
target_sanitization(${PROJECT_NAME})

target_include_directories(
    ${PROJECT_NAME}
    PRIVATE
        ${GODZILLA_INCLUDE_DIRS}
        ${CONDA_INCLUDE_DIR}
        ${CMAKE_SOURCE_DIR}/test/include
        ${CMAKE_BINARY_DIR}
)

target_link_libraries(
    ${PROJECT_NAME}
    PUBLIC
        ${GODZILLA_LIBRARIES}
        gtest_main
        gmock_main
)
